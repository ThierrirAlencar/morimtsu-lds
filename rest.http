POST http://127.0.0.1:3000/user 
Content-Type: application/json

{
    "name":"Saulo Morimitsu",
    "email":"admin@gmail.com",
    "password":"admin123",
    "role":"ADMIN"
}

### Enviar c√≥digo de recupera√ß√£o
PATCH https://morimtsu-lds.onrender.com/auth
Content-Type: application/json

{
  "email": "usuario@exemplo.com"
}

### Atualizar senha do usu√°rio
PUT http://127.0.0.1:3000/auth
Content-Type: application/json

{
  "passport": "usuario123",
  "refString": "codigo-de-verificacao",
  "newPassword": "NovaSenhaSegura123!"
}

### üîê Login do usu√°rio
POST http://127.0.0.1:3000/user/login
Content-Type: application/json

{
  "Email": "admin@gmail.com",
  "Password": "admin123"
}

### ‚öôÔ∏è Atualizar dados do usu√°rio (PUT /user)
PUT http://127.0.0.1:3000/user
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI3M2I5NjIxNy0wYWQ3LTQ3ZTMtYjI3ZC1jOTk4YTI0NWEwOTIiLCJpYXQiOjE3NjE3NDM3OTIsImV4cCI6MTc2MjM0ODU5Mn0.nZ2k0W6aoGO0f_fuU5CsGQngzcfbbrrD82Hbk-xuJgs
Content-Type: application/json

{
  "name": "Saulo De Lima Bezerra"
}

### üóëÔ∏è Excluir usu√°rio (DELETE /user/:id)
DELETE http://127.0.0.1:3000/user/1f1a2b3c-4d5e-6f7a-8b9c-0d1e2f3a4b5c
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJiMzg4YmM1ZC1iYzdmLTQxOTAtOGI5Yi0xYTkzZDAzZjM0NzAiLCJpYXQiOjE3NjE3NDMyMzQsImV4cCI6MTc2MjM0ODAzNH0.PsnEqsDYp3U4zxHSvkGLzHNMAJgoZA1qoccncddXmB0

### üë§ Obter perfil do usu√°rio (GET /user/:id/profile)
GET http://127.0.0.1:3000/user/profile
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJiMzg4YmM1ZC1iYzdmLTQxOTAtOGI5Yi0xYTkzZDAzZjM0NzAiLCJpYXQiOjE3NjE3NDMyMzQsImV4cCI6MTc2MjM0ODAzNH0.PsnEqsDYp3U4zxHSvkGLzHNMAJgoZA1qoccncddXmB0
# REST tests for classController
# Substitua {{baseUrl}} pelo endere√ßo da sua API (ex: http://localhost:3000)
# Ap√≥s criar a class, copie o id retornado e substitua {{classId}} nos requests seguintes.

### Create class (without coachId)
POST http://127.0.0.1:3000/class
Content-Type: application/json

{
  "iconURL":"askkahsjjaksjjskaskaj",
  "name": "Test Class REST - without coach v1",
  "description": "Classe criada pelo teste REST"
}

### Create class (with coachId)
POST http://127.0.0.1:3000/class
Content-Type: application/json

{
  "name": "Turma de Isaque",
  "description": "Turma de Jiu-Jitsu para crian√ßas",
  "coachId": [],
  "iconURL": "https://example.com/icon.png",
  "maxAge": 12,
  "minAge": 6,
  "endTime": "18:00",
  "startTime": "17:00"
}

### Get class by id
GET https://morimtsu-lds.onrender.com/class/cmh2dj2ze0009fa22yyybsh38
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI4MWI2ZWE5Mi03MzRkLTQwZDItOGYwZC03MDAzZTM1NDY5MzMiLCJpYXQiOjE3NjExNDEzNDQsImV4cCI6MTc2MTc0NjE0NH0.nJMOFHu4hechTHrmyzXa8vvUMz9LOU8R9nSxPv02lHQ

### Update class
PUT http://127.0.0.1:3000/class/cmh0lx2fe0000ildk9cbn0s0p
Content-Type: application/json

{
  "description": "Descri√ß√£o atualizada"
}

### Delete class
DELETE http://127.0.0.1:3000/class/cmh0lx2fe0000ildk9cbn0s0p

### Get filtered classes (only query)
GET http://127.0.0.1:3000/class
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI3M2I5NjIxNy0wYWQ3LTQ3ZTMtYjI3ZC1jOTk4YTI0NWEwOTIiLCJpYXQiOjE3NjE3NjI4MTgsImV4cCI6MTc2MjM2NzYxOH0.Y5dSK1N7X1pMnX6Fkv0SzQeo1SilSme1u_VFLzdOKEg

# REST tests for StudentController
# Replace {{baseUrl}} with your server address (ex: http://localhost:3000)
# Replace IDs ({{studentId}}, {{classId}}) with real values returned by create requests.

### Create student
POST http://127.0.0.1:3000/student
Content-Type: application/json

{
  "name": "Xirlei",
  "email": "Xirlei@example.com",
  "CPF": "1",
  "contact": "+1",
  "birthDate": "2001-05-20",
  "nickname": "Xirlei do Grau",
  "rank": "BRANCA",
  "comments": "Mulher",
  "presence": 89,
  "rating": 2,
  "gender":"female",
  "classId": ["cmhcdqnxl0000ilv8zj32ekta"]
}

### Get student by id
GET http://127.0.0.1:3000/student/b633ed3e-06d2-41e0-a6d0-d2f1f48b0116


### Update student personal info
PUT {{baseUrl}}/student/{{studentId}}/personal
Content-Type: application/json

{
  "name": "Jo√£o S. Updated",
  "contact": "+5511988888888",
  "nickname": "JoaoUpdated"
}

### Update student form
PUT {{baseUrl}}/student/{{studentId}}/form
Content-Type: application/json

{
  "Rank": "YELLOW",
  "Comments": "Improved technique",
  "Presence": 95,
  "Rating": 4
}

### Delete student
DELETE http://127.0.0.1:3000/student/{{studentId}}


### Student joins a class
POST http://127.0.0.1:3000/student/{{studentId}}/join/cmh2ds8qi000afa222rxz7aqq


### Query students - full filter
GET http://127.0.0.1:3000/student?query=Joao&minAge=10&maxAge=18&CPF=12345678900&email=joao.silva@example.com&Presence=100&Rank=WHITE&class={{classId}}

### Query students - by text only
GET http://127.0.0.1:3000/student?query=Silva

### Query students - by age range only
GET http://127.0.0.1:3000/student